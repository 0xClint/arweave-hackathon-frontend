import "./App.css";
import { useState } from "react";
import { ArweaveWebWallet } from "arweave-wallet-connector";
import { WarpFactory } from "warp-contracts";
import { InjectedArweaveSigner } from "warp-contracts-plugin-deploy";
import Lottie from "react-lottie-player";
import gif2 from "./gif2.json";

function App() {
  const [wallet, setWallet] = useState("");
  const [address, setAddress] = useState("");
  const [isConnected, setConnected] = useState(false);
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [loader, setLoader] = useState(false);
  const [success, setSuccess] = useState(false);

  const connectWallet = async () => {
    let wallet = new ArweaveWebWallet({
      // optionally provide information about your app that will be displayed in the wallet provider interface
      name: "temp-app",
      logo: "LOGO url",
    });
    setWallet(wallet);
    await wallet.setUrl("arweave.app");
    await wallet.connect();
    console.log(process.env.REACT_APP_TX_ID);
    setAddress(await wallet.address);
    setConnected(true);
  };

  const subscribe = async (e) => {
    e.preventDefault();
    if (name && email && address) {
      setLoader(true);
      const userSigner = await new InjectedArweaveSigner(wallet);
      await userSigner.setPublicKey();

      const warp = WarpFactory.forTestnet();
      const contract = await warp
        .contract("gWNXcy0ZbI8xDphrsS7B3H7Pb9qKlwnFoXxrgJenjEM")
        .connect(userSigner);
      try {
        const result = await contract.writeInteraction({
          function: "addUser",
          user: {
            address,
            email,
            status: "active",
            name,
          },
        });
        console.log("result:", result);
      } catch (err) {
        console.log("error:", err);
      }
      setLoader(false);
      setSuccess(true);
    }
  };
  return (
    <div className="App">
      {loader && (
        <div className="overlay">
          <Lottie
            loop
            animationData={gif2}
            play
            style={{
              width: 60,
              height: 60,
            }}
          />
        </div>
      )}
      {success && (
        <div className="success_overlay">
          <div>
            <h1>Thank you for Subscribing</h1>
            <span onClick={() => setSuccess(false)}>
              <a href="#home">back home</a>
            </span>
          </div>
        </div>
      )}
      <nav className="navbar">
        <div className="navbar_container">
          <a href="#home" className="logo" id="navbar_logo">
            <svg
              height="40"
              viewBox="0 0 2309 598"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M579.93 472C576.565 472 573.705 470.822 571.35 468.467C568.994 466.111 567.817 463.251 567.817 459.886V221.65C567.817 218.285 568.994 215.425 571.35 213.069C573.705 210.714 576.565 209.536 579.93 209.536H621.319C624.684 209.536 627.544 210.714 629.899 213.069C632.255 215.425 633.433 218.285 633.433 221.65V242.344C642.181 231.577 653.286 222.659 666.745 215.593C680.541 208.19 697.534 204.489 717.724 204.489C738.25 204.489 756.084 209.2 771.226 218.622C786.368 227.707 797.977 240.662 806.053 257.486C814.465 274.311 818.671 294.501 818.671 318.055V459.886C818.671 463.251 817.494 466.111 815.138 468.467C812.783 470.822 809.923 472 806.558 472H762.141C758.776 472 755.916 470.822 753.56 468.467C751.205 466.111 750.027 463.251 750.027 459.886V321.083C750.027 301.567 745.148 286.256 735.39 275.152C725.968 264.048 712.172 258.496 694.001 258.496C676.503 258.496 662.539 264.048 652.108 275.152C641.677 286.256 636.461 301.567 636.461 321.083V459.886C636.461 463.251 635.283 466.111 632.928 468.467C630.572 470.822 627.712 472 624.347 472H579.93ZM998.875 477.047C971.955 477.047 949.242 472.336 930.735 462.915C912.564 453.493 898.6 440.202 888.842 423.04C879.42 405.879 874.036 385.858 872.69 362.977C872.354 356.92 872.185 349.517 872.185 340.768C872.185 332.019 872.354 324.617 872.69 318.56C874.036 295.342 879.588 275.32 889.346 258.496C899.441 241.335 913.574 228.043 931.744 218.622C950.251 209.2 972.628 204.489 998.875 204.489C1025.12 204.489 1047.33 209.2 1065.5 218.622C1084.01 228.043 1098.14 241.335 1107.9 258.496C1117.99 275.32 1123.71 295.342 1125.06 318.56C1125.4 324.617 1125.56 332.019 1125.56 340.768C1125.56 349.517 1125.4 356.92 1125.06 362.977C1123.71 385.858 1118.16 405.879 1108.4 423.04C1098.98 440.202 1085.02 453.493 1066.51 462.915C1048.34 472.336 1025.79 477.047 998.875 477.047ZM998.875 427.078C1016.71 427.078 1030.5 421.526 1040.26 410.422C1050.02 398.981 1055.41 382.325 1056.41 360.453C1056.75 355.406 1056.92 348.844 1056.92 340.768C1056.92 332.692 1056.75 326.131 1056.41 321.083C1055.41 299.548 1050.02 283.06 1040.26 271.619C1030.5 260.178 1016.71 254.458 998.875 254.458C981.041 254.458 967.244 260.178 957.486 271.619C947.728 283.06 942.344 299.548 941.334 321.083C940.998 326.131 940.83 332.692 940.83 340.768C940.83 348.844 940.998 355.406 941.334 360.453C942.344 382.325 947.728 398.981 957.486 410.422C967.244 421.526 981.041 427.078 998.875 427.078ZM1298.13 472C1277.94 472 1260.95 468.467 1247.15 461.401C1233.35 454.334 1223.09 443.903 1216.36 430.107C1209.63 415.974 1206.27 398.477 1206.27 377.614V263.039H1166.39C1163.03 263.039 1160.17 261.861 1157.81 259.505C1155.46 257.15 1154.28 254.29 1154.28 250.925V221.65C1154.28 218.285 1155.46 215.425 1157.81 213.069C1160.17 210.714 1163.03 209.536 1166.39 209.536H1206.27V125.75C1206.27 122.385 1207.28 119.525 1209.3 117.169C1211.65 114.814 1214.68 113.636 1218.38 113.636H1259.26C1262.63 113.636 1265.49 114.814 1267.84 117.169C1270.2 119.525 1271.38 122.385 1271.38 125.75V209.536H1334.47C1337.83 209.536 1340.7 210.714 1343.05 213.069C1345.41 215.425 1346.58 218.285 1346.58 221.65V250.925C1346.58 254.29 1345.41 257.15 1343.05 259.505C1340.7 261.861 1337.83 263.039 1334.47 263.039H1271.38V372.567C1271.38 386.363 1273.73 397.131 1278.44 404.87C1283.49 412.609 1292.07 416.479 1304.19 416.479H1339.01C1342.38 416.479 1345.24 417.657 1347.59 420.012C1349.95 422.367 1351.13 425.228 1351.13 428.593V459.886C1351.13 463.251 1349.95 466.111 1347.59 468.467C1345.24 470.822 1342.38 472 1339.01 472H1298.13ZM1408.02 472C1404.65 472 1401.79 470.822 1399.44 468.467C1397.08 466.111 1395.9 463.251 1395.9 459.886V221.65C1395.9 218.285 1397.08 215.425 1399.44 213.069C1401.79 210.714 1404.65 209.536 1408.02 209.536H1449.91C1453.61 209.536 1456.47 210.714 1458.49 213.069C1460.85 215.425 1462.02 218.285 1462.02 221.65V459.886C1462.02 463.251 1460.85 466.111 1458.49 468.467C1456.47 470.822 1453.61 472 1449.91 472H1408.02ZM1406 166.129C1402.3 166.129 1399.27 165.119 1396.91 163.1C1394.89 160.745 1393.88 157.717 1393.88 154.015V117.674C1393.88 114.309 1394.89 111.449 1396.91 109.093C1399.27 106.738 1402.3 105.56 1406 105.56H1451.93C1455.63 105.56 1458.66 106.738 1461.01 109.093C1463.37 111.449 1464.55 114.309 1464.55 117.674V154.015C1464.55 157.717 1463.37 160.745 1461.01 163.1C1458.66 165.119 1455.63 166.129 1451.93 166.129H1406ZM1569.37 472C1566 472 1563.14 470.822 1560.79 468.467C1558.43 466.111 1557.25 463.251 1557.25 459.886V263.039H1516.37C1513 263.039 1510.14 261.861 1507.79 259.505C1505.43 257.15 1504.26 254.29 1504.26 250.925V221.65C1504.26 218.285 1505.43 215.425 1507.79 213.069C1510.14 210.714 1513 209.536 1516.37 209.536H1557.25V188.842C1557.25 168.653 1560.95 151.996 1568.36 138.873C1575.76 125.413 1586.7 115.319 1601.16 108.589C1615.63 101.859 1633.97 98.494 1656.18 98.494H1759.15C1762.85 98.494 1765.71 99.6717 1767.73 102.027C1770.08 104.383 1771.26 107.243 1771.26 110.608V139.882C1771.26 143.247 1770.08 146.108 1767.73 148.463C1765.71 150.818 1762.85 151.996 1759.15 151.996H1658.2C1644.74 151.996 1635.49 155.361 1630.44 162.091C1625.39 168.821 1622.87 178.579 1622.87 191.366V209.536H1759.15C1762.85 209.536 1765.71 210.714 1767.73 213.069C1770.08 215.425 1771.26 218.285 1771.26 221.65V459.886C1771.26 463.251 1770.08 466.111 1767.73 468.467C1765.71 470.822 1762.85 472 1759.15 472H1718.26C1714.9 472 1712.04 470.822 1709.68 468.467C1707.33 466.111 1706.15 463.251 1706.15 459.886V263.039H1622.87V459.886C1622.87 463.251 1621.69 466.111 1619.34 468.467C1616.98 470.822 1614.12 472 1610.75 472H1569.37ZM1953.07 477.047C1915.72 477.047 1886.11 466.28 1864.24 444.744C1842.37 423.209 1830.59 392.588 1828.91 352.882C1828.57 349.517 1828.4 345.311 1828.4 340.263C1828.4 334.88 1828.57 330.673 1828.91 327.645C1830.25 302.408 1835.97 280.536 1846.07 262.029C1856.5 243.522 1870.8 229.389 1888.97 219.631C1907.14 209.536 1928.51 204.489 1953.07 204.489C1980.33 204.489 2003.21 210.209 2021.72 221.65C2040.22 232.754 2054.19 248.401 2063.61 268.591C2073.03 288.444 2077.74 311.493 2077.74 337.74V348.339C2077.74 351.704 2076.57 354.564 2074.21 356.92C2071.86 359.275 2068.83 360.453 2065.13 360.453H1897.55C1897.55 360.453 1897.55 360.958 1897.55 361.967C1897.55 362.977 1897.55 363.818 1897.55 364.491C1897.89 376.268 1900.08 387.204 1904.11 397.299C1908.49 407.057 1914.71 414.965 1922.79 421.021C1931.2 427.078 1941.13 430.107 1952.57 430.107C1961.99 430.107 1969.9 428.761 1976.29 426.069C1982.68 423.04 1987.9 419.676 1991.94 415.974C1995.98 412.273 1998.84 409.244 2000.52 406.889C2003.55 402.851 2005.9 400.495 2007.59 399.822C2009.6 398.813 2012.46 398.308 2016.17 398.308H2059.57C2062.94 398.308 2065.63 399.318 2067.65 401.337C2070 403.356 2071.01 405.879 2070.68 408.908C2070.34 414.292 2067.48 420.853 2062.1 428.593C2057.05 436.332 2049.65 443.903 2039.89 451.306C2030.13 458.709 2017.85 464.934 2003.04 469.981C1988.57 474.692 1971.92 477.047 1953.07 477.047ZM1897.55 318.055H2009.1V316.541C2009.1 303.418 2006.91 291.977 2002.54 282.219C1998.16 272.46 1991.77 264.721 1983.36 259.001C1974.95 253.28 1964.85 250.42 1953.07 250.42C1941.3 250.42 1931.2 253.28 1922.79 259.001C1914.38 264.721 1907.98 272.46 1903.61 282.219C1899.57 291.977 1897.55 303.418 1897.55 316.541V318.055ZM2143.43 472C2140.07 472 2137.21 470.822 2134.85 468.467C2132.5 466.111 2131.32 463.251 2131.32 459.886V222.155C2131.32 218.453 2132.5 215.425 2134.85 213.069C2137.21 210.714 2140.07 209.536 2143.43 209.536H2184.32C2187.68 209.536 2190.54 210.714 2192.9 213.069C2195.59 215.425 2196.94 218.453 2196.94 222.155V242.849C2204.68 232.081 2214.6 223.837 2226.72 218.117C2239.17 212.396 2253.47 209.536 2269.62 209.536H2290.31C2294.01 209.536 2296.88 210.714 2298.89 213.069C2301.25 215.425 2302.43 218.285 2302.43 221.65V257.991C2302.43 261.356 2301.25 264.216 2298.89 266.572C2296.88 268.927 2294.01 270.105 2290.31 270.105H2250.94C2234.79 270.105 2222.17 274.647 2213.09 283.733C2204.34 292.818 2199.97 305.268 2199.97 321.083V459.886C2199.97 463.251 2198.79 466.111 2196.43 468.467C2194.08 470.822 2191.05 472 2187.35 472H2143.43Z"
                fill="white"
              />
              <path
                d="M59.2423 255.018C59.2423 166.305 131.158 94.3896 219.871 94.3896V94.3896C308.584 94.3896 380.499 166.305 380.499 255.018V321.257C380.499 321.257 377.218 384.605 387.951 416.475C391.651 427.459 397.627 437.909 402.882 445.854C406.789 451.762 402.642 460.358 395.559 460.358H40.8092C34.3598 460.358 30.2471 453.234 33.2081 447.505C37.4116 439.371 42.7056 428.205 46.8226 416.475C59.0304 381.693 59.2423 312.977 59.2423 312.977V255.018Z"
                stroke="white"
                strokeWidth="62.9266"
              />
              <circle cx="354.003" cy="139.1" r="99.3578" fill="black" />
              <circle cx="354.004" cy="139.101" r="61.2707" fill="#CE28F9" />
              <circle cx="354.004" cy="139.101" r="21.5275" fill="black" />
              <path
                d="M297.701 510.037H142.04C142.04 510.037 170.191 558.034 222.864 558.034C267.893 558.034 297.701 510.037 297.701 510.037Z"
                fill="white"
              />
              <path
                d="M98.9854 417.303C105.609 402.73 108.921 297.521 108.093 246.738C111.957 294.761 125.812 393.788 150.32 405.711C165.841 413.261 185.501 416.34 201.478 417.303H224.011C218.748 417.707 210.73 417.86 201.478 417.303H98.9854Z"
                fill="#CE28F9"
              />
            </svg>
          </a>
          <div className="navbar_toggle" id="mobile-menu">
            <span className="bar"></span>
            <span className="bar"></span>
            <span className="bar"></span>
          </div>
          <ul className="navbar_menu">
            <li className="navbar_item">
              <a href="#home" className="navbar_links" id="home-page">
                Home
              </a>
            </li>
            <li className="navbar_item">
              <a href="#subscribe" className="navbar_links" id="about-page">
                Get Notified
              </a>
            </li>

            <li className="navbar_btn">
              <button
                className="connect_btn"
                id="signup"
                onClick={() => connectWallet()}
              >
                <a>{isConnected ? "connected" : "connect"}</a>
              </button>
            </li>
          </ul>
        </div>
      </nav>
      {/* <!--Hero Section---> */}
      <section className="hero" id="home">
        <div className="hero_container">
          <h1 className="hero_heading">
            Get <span>Notifed</span>
          </h1>
          <p className="hero_description">
            Stay Informed: Introducing Your Personalized Email Notification App!
          </p>
          <button className="main_btn">
            <a href="#subscribe">Subscribe</a>
          </button>
        </div>
      </section>
      {/* <!----Features Section----> */}
      <section className="main" id="subscribe">
        <div className="main_container">
          <div className="main_content">
            <h1>Subscribe Now to get notify</h1>
            <form className="main_inputContainer">
              <div className="main_input_item">
                <label>Name</label>
                <input
                  type="text"
                  value={name}
                  onChange={(e) => setName(e.target.value)}
                  required
                ></input>
              </div>
              <div className="main_input_item">
                <label>Email</label>
                <input
                  type="email"
                  required
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                ></input>
              </div>
              <button className="main_connect" onClick={() => connectWallet()}>
                {isConnected ? "connected" : "connect wallet"}
              </button>
              <button className="main_btn" onClick={(e) => subscribe(e)}>
                <a>Subscribe</a>
              </button>
            </form>
          </div>
          <div className="main_img_container">
            <div className="main_img_card" id="card-2">
              <img src={require("../src/assets/logo.png")}></img>
            </div>
          </div>
        </div>
      </section>
      {/* <!----Services Section----> */}
      {/* <section className="services" id="services">
        <h1>Our Services</h1>
        <div className="services_wrapper">
          <div className="services_card">
            <h2>Custom colorways</h2>
            <p>AI Powered Technology</p>
            <div className="services_btn">
              <button>Get Services</button>
            </div>
          </div>
          <div className="services_card">
            <h2>Are you Ready?</h2>
            <p>Take On the power</p>
            <div className="services_btn">
              <button>Get Services</button>
            </div>
          </div>
          <div className="services_card">
            <h2>Full Gradient</h2>
            <p>Explore the colors</p>
            <div className="services_btn">
              <button>Get Services</button>
            </div>
          </div>
          <div className="services_card">
            <h2>enjoy the Meta</h2>
            <p>Virtual Technology</p>
            <div className="services_btn">
              <button>Get Services</button>
            </div>
          </div>
        </div>
      </section>{" "} */}
    </div>
  );
}

export default App;
